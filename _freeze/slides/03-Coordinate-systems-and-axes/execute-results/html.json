{
  "hash": "204eb727eea652f5f255e952474670bb",
  "result": {
    "markdown": "---\ntitle: \"03 Coordinate systems and axes\"\ntitle-slide-attributes:\n  data-background-image: \"preview_img/03-coordinate-systems-and-axes.jfif\"\n  data-background-size: \"30%\"\n  data-background-opacity: \"0.6\"\nformat: \n  revealjs:\n    code-overflow: wrap\n    width: 1600\n    height: 900\n    fig-align: center\n    default-image-extension: svg\nimage: \"preview_img/03-coordinate-systems-and-axes.jfif\"\nfavicon: html/favicon.ico\n---\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n\n## Example: Population of Swedish municipalities\n\nA linear scale emphasizes large counties\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](03-Coordinate-systems-and-axes_files/figure-revealjs/unnamed-chunk-3-1.png){width=960}\n:::\n:::\n\n\n## Example: Population of Swedish municipalities\n\nA log scale shows symmetry around the median\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](03-Coordinate-systems-and-axes_files/figure-revealjs/unnamed-chunk-4-1.png){width=960}\n:::\n:::\n\n\n## Nonlinear coordinate systems: Polar coordinates\n\n::::: {.columns}\n\n:::: {.column width=\"50%\"}\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](03-Coordinate-systems-and-axes_files/figure-revealjs/unnamed-chunk-5-1.png){width=960}\n:::\n:::\n\n\n::::\n\n:::: {.column width=\"50%\"}\n\n::: {.fragment}\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](03-Coordinate-systems-and-axes_files/figure-revealjs/unnamed-chunk-6-1.png){width=960}\n:::\n:::\n\n\n:::\n\n::::\n\n:::::\n\n## Cartesian vs polar coordinates\n\n::::: {.columns}\n\n:::: {.column width=\"50%\"}\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](03-Coordinate-systems-and-axes_files/figure-revealjs/unnamed-chunk-7-1.png){width=960}\n:::\n:::\n\n\n::::\n\n:::: {.column width=\"50%\"}\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](03-Coordinate-systems-and-axes_files/figure-revealjs/unnamed-chunk-8-1.png){width=960}\n:::\n:::\n\n\n\n::::\n\n::::\n\n# Scales and coordinate systems in **ggplot2**\n\n## Scale functions customize the x and y axes\n\nRecall the musical artists example from a prior lecture\n\n\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code}\nggplot(artists, \n       aes(monthly_streamers, \n           fct_reorder(artist, monthly_streamers))) +\n  geom_col()\n```\n\n::: {.cell-output-display}\n![](03-Coordinate-systems-and-axes_files/figure-revealjs/unnamed-chunk-10-1.png){width=960}\n:::\n:::\n\n\n## Scale functions customize the x and y axes\n\nAdd scale functions (no change in figure so far)\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"|5,6\"}\nggplot(artists, \n       aes(monthly_streamers, \n           fct_reorder(artist, monthly_streamers))) +\n  geom_col() +\n  scale_x_continuous() +\n  scale_y_discrete()\n```\n\n::: {.cell-output-display}\n![](03-Coordinate-systems-and-axes_files/figure-revealjs/unnamed-chunk-11-1.png){width=960}\n:::\n:::\n\n\n## Scale functions customize the x and y axes\n\nThe parameter `name` sets the axis title\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"|6,9\"}\nggplot(artists, \n       aes(monthly_streamers, \n           fct_reorder(artist, monthly_streamers))) +\n  geom_col() +\n  scale_x_continuous(\n    name = \"Monthly streamers\"\n  ) +\n  scale_y_discrete(\n    name = NULL # no axis title\n  )\n```\n\n::: {.cell-output-display}\n![](03-Coordinate-systems-and-axes_files/figure-revealjs/unnamed-chunk-12-1.png){width=960}\n:::\n:::\n\n\n::: aside\nNote: We could do the same with `xlab()` and `ylab()`\n:::\n\n\n",
    "supporting": [
      "03-Coordinate-systems-and-axes_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\r\n<script>\r\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\r\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\r\n  // slide changes (different for each slide format).\r\n  (function () {\r\n    // dispatch for htmlwidgets\r\n    function fireSlideEnter() {\r\n      const event = window.document.createEvent(\"Event\");\r\n      event.initEvent(\"slideenter\", true, true);\r\n      window.document.dispatchEvent(event);\r\n    }\r\n\r\n    function fireSlideChanged(previousSlide, currentSlide) {\r\n      fireSlideEnter();\r\n\r\n      // dispatch for shiny\r\n      if (window.jQuery) {\r\n        if (previousSlide) {\r\n          window.jQuery(previousSlide).trigger(\"hidden\");\r\n        }\r\n        if (currentSlide) {\r\n          window.jQuery(currentSlide).trigger(\"shown\");\r\n        }\r\n      }\r\n    }\r\n\r\n    // hookup for slidy\r\n    if (window.w3c_slidy) {\r\n      window.w3c_slidy.add_observer(function (slide_num) {\r\n        // slide_num starts at position 1\r\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\r\n      });\r\n    }\r\n\r\n  })();\r\n</script>\r\n\r\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}