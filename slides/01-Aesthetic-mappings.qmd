---
title: "01 Aesthetic mappings"
format: revealjs
image: "preview_img/01-aesthetic-mappings.jfif"
favicon: html/favicon.ico
---

```{r}
#| include: false
#| echo: false

# a painting of a sunset over a blue mountain in the style of Hans Hartung, hyper realistic, beautiful, ArtStation trending

knitr::opts_chunk$set(comment = "")
library(tidyverse)
library(lubridate)
library(cowplot)
library(colorspace)
library(here)
library(gt)

theme_set(theme_gray(16)) # 16 for full width, 18 for half width 
update_geom_defaults("point", list(size = 2)) # 2 for full width, 2.5 for half width

```
---

:::{style="text-align: center;"}

<br>

<h2>Plots map data onto graphical elements</h2>

:::

## Dataset:
Daily average temperatures for various locations

```{r}
#| echo: false
sun_hours <- readxl::read_excel(here("slides", "data", "sun_times.xlsx"), skip = 2) %>% 
  separate(day, into = c("day", "month", "year")) %>% 
  separate(sunrise, into = c("sunrise_hour", "sunrise_min"), sep = "\\.") %>% 
  separate(sunset, into = c("sunset_hour", "sunset_min"), sep = "\\.") %>% 
  mutate(across(-city, parse_number)) %>% 
  mutate(across(contains("min"), ~ 60/1000 * .x),
         across(.cols = c(day, month, contains("hour")), ~ ifelse(nchar(.x) == 1, paste0("0", .x), .x))) %>% 
  mutate(date = str_c(year, "-", month, "-", day),
         date = ymd(date),
         across(contains("min"), round),
         sunrise_time = str_c(sunrise_hour, ":", sunrise_min),
         sunset_time = str_c(sunset_hour, ":", sunset_min),
         across(contains("time"), hm)) %>% 
  select(city, date, contains("time")) %>% 
  mutate(sun_hours = sunset_time - sunrise_time,
         sun_hours_period = sun_hours,
         sun_hours = as.numeric(sun_hours) / 3600,
         city = factor(city,
                       levels = c("Lund, Sweden",
                                  "Panama City, Panama",
                                  "Livingstone, Zambia",
                                  "Cape Town, South Africa"))) %>% 
    select(city, date, sun_hours, sun_hours_period)

sun_hours %>%
  select(-sun_hours_period) %>% 
  head(10) %>%
  gt() %>%
  tab_header(title = "Sunrise and sunset time") %>%
  cols_label(
    city = "City",
    date = "Date",
    sun_hours = "Hours between sunrise and sunset"
  ) %>% 
  tab_options(table.font.size = "small")
```

## Sun hours mapped onto y position

```{r}
#| fig-align: center
sun_hours %>%
  ggplot(aes(x = date, y = sun_hours, color = city)) +
  geom_line(size = 1) +
  scale_y_continuous(labels = scales::number_format(accuracy = 1)) +
  scale_color_manual(
    name = NULL,
    values = c("#E69F00", "#56B4E9", "#009E73", "#CC79A7")
  ) +
  theme_minimal_grid(16) +
  labs(x = NULL, y = "Hours between sunrise and sunet")
```

## Sun hours mapped onto colour

```{r}
#| fig-align: center
sun_hours %>%
  mutate(
    month = month(date, label = T)
  ) %>%
  group_by(city, month) %>%
  summarise(mean_sun_hours = mean(sun_hours)) %>%
  ggplot(aes(x = month, y = city, fill = mean_sun_hours)) +
  geom_tile(width = .95, height = 0.95) + 
  scale_fill_viridis_c(
    option = "B", begin = 0.15, end = 0.98,
    name = "Hours of sunlight"
  ) + 
  scale_x_discrete(name = "Month") +
  scale_y_discrete(name = NULL) +
  coord_fixed(expand = FALSE) +
  theme_half_open(16) +
  theme(
    axis.line = element_blank(),
    axis.ticks = element_blank(),
    legend.title = element_text(size = 14)
  )
```

# Creating aesthetic mappings in **ggplot**

## We define the mapping with `aes()`

```{r}
#| echo: true
#| fig-align: center

ggplot(
  data = sun_hours,
  mapping = aes(x = date, y = sun_hours, colour = city)
) + geom_line(size = 2)
```

## We define the mapping with `aes()`

```{r}
#| echo: true
#| fig-align: center

ggplot(
  data = sun_hours,
  mapping = aes(x = date, y = city, colour = sun_hours)
) + geom_point(size = 5)
```

## We frequently omit argument names

<br>

Long form, all arguments are named:

```{r}
#| echo: true
#| eval: false

ggplot(
  data = sun_hours,
  mapping = aes(x = date, y = city, colour = sun_hours)
) + geom_point(size = 5)
```

<br>

Abbreviated form, common arguments remain unnamed:

```{r}
#| echo: true
#| eval: false

ggplot(sun_hours, aes(x = date, y = city, colour = sun_hours)) + 
  geom_point(size = 5)
```

## The geom determines how the data is shown

```{r}
#| echo: true
#| fig-align: center

ggplot(sun_hours, aes(date, sun_hours, colour = city)) + 
  geom_line(size = 2)
```

## The geom determines how the data is shown

```{r}
#| echo: true
#| fig-align: center

ggplot(sun_hours, aes(date, city, colour = sun_hours)) + 
  geom_point(size = 5)
```


## The geom determines how the data is shown

```{r}
#| include: false
sun_hours <- sun_hours %>% 
  mutate(month = month(date, label = T))
```


```{r}
#| echo: true
#| fig-align: center

ggplot(sun_hours, aes(month, sun_hours, colour = city)) + 
  geom_boxplot()
```


## The geom determines how the data is shown

```{r}
#| echo: true
#| fig-align: center

ggplot(sun_hours, aes(month, sun_hours, fill = city)) + 
  geom_violin() +
  facet_wrap(vars(city))
```

# Important: `colour` and `fill` apply to different elements

## `colour` and `fill` apply to different elements

:::{.incremental}

- `colour` applies colour to points, lines, text, borders

- `fill` applies colour to any filled areas

:::

## Many geoms have both `colour` and `fill` aesthetics

```{r}
#| echo: true
#| fig-align: center

ggplot(sun_hours, aes(month, sun_hours, colour = city)) + 
  geom_boxplot()
```


## Many geoms have both `colour` and `fill` aesthetics

```{r}
#| echo: true
#| fig-align: center

ggplot(sun_hours, aes(month, sun_hours, fill = city)) + 
  geom_boxplot()
```


## Many geoms have both `colour` and `fill` aesthetics

```{r}
#| echo: true
#| fig-align: center

ggplot(sun_hours, aes(month, sun_hours, colour = city, fill = city)) + 
  geom_boxplot()
```

## Aesthetics can also be used as parameters in geoms

```{r}
#| echo: true
#| fig-align: center

ggplot(sun_hours, aes(month, sun_hours, fill = city)) + 
  geom_boxplot(colour = "midnightblue")
```


## Aesthetics can also be used as parameters in geoms

```{r}
#| echo: true
#| fig-align: center

ggplot(sun_hours, aes(month, sun_hours, colour = city)) + 
  geom_boxplot(fill = "midnightblue")
```


## Further reading

- Fundamentals of Data Visualization: [Chapter 2: Visualizing data](https://clauswilke.com/dataviz/aesthetic-mapping.html)
- Data Visualizationâ€”A Practical Introduction: [Chapter 3: Make a plot](https://socviz.co/makeplot.html#makeplot)
- [**ggplot2** reference documentation](https://ggplot2.tidyverse.org/reference/index.html)
- [**ggplot2** book](https://ggplot2-book.org/)
- [**ggplot2** cheatsheet](https://raw.githubusercontent.com/rstudio/cheatsheets/main/data-visualization.pdf)